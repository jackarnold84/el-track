{"version":3,"file":"component---src-templates-station-stop-tsx-901ab623815c2ca80a9e.js","mappings":"qtv5BAsBO,MAAMA,E,k6+6EACAC,EAAiDC,E,wBCQ9D,MArB6BC,IAAmD,IAAlD,YAAEC,GAA2C,EACzE,MAAMC,EAAYD,EAAYC,UACxBC,EAAUL,EAAaI,GACvBE,EAASH,EAAYG,OAErBC,EADcF,EAAQG,MAAMF,GACPG,KAAIC,GAAWX,EAAWW,KAE/CC,EAAa,CACjBC,YAAaL,EAAO,GAAGM,KACvBC,OAAQP,EAAOE,KAAIM,GAASA,EAAMC,QAClCV,OAAQC,EAAO,GAAGU,MAEdC,EAAcX,EAAOE,KAAIM,IAAS,CAAGI,GAAIJ,EAAMC,MAAOI,KAAML,EAAMM,cAExE,OACEC,EAAAA,cAACC,EAAAA,EAAM,KACLD,EAAAA,cAACE,EAAAA,EAAQ,CAACjB,OAAQ,CAACI,GAAac,MAAOlB,EAAO,GAAGmB,SAAUR,YAAaA,IACjE,EAMN,MAAMS,EAAOA,IAAML,EAAAA,cAAAA,QAAAA,KAAO,W","sources":["webpack://el-track/./src/config/index/index.ts","webpack://el-track/./src/templates/stationStop.tsx"],"sourcesContent":["import stationData from \"./stations.json\";\nimport trackData from \"./tracks.json\";\n\ntype Track = {\n  type: string;\n  route: string;\n  routeName: string;\n  stop: string;\n  stopName: string;\n  direction: string;\n  headsign: string[];\n}\n\ntype Station = {\n  name: string;\n  stops: StopTracks;\n}\n\ntype StopTracks = {\n  [stopId: string]: string[];\n}\n\nexport const trackIndex: { [trackId: string]: Track } = trackData;\nexport const stationIndex: { [stationId: string]: Station } = stationData;\n","import * as React from \"react\";\nimport { stationIndex, trackIndex } from \"../config/index\";\nimport Layout from \"../features/layout/Layout\";\nimport Arrivals from \"../features/track/Arrivals\";\n\ntype PageContext = {\n  stationId: string;\n  stopId: string;\n};\n\nconst StationStopTrackPage = ({ pageContext }: { pageContext: PageContext }) => {\n  const stationId = pageContext.stationId;\n  const station = stationIndex[stationId];\n  const stopId = pageContext.stopId;\n  const trackIdList = station.stops[stopId];\n  const tracks = trackIdList.map(trackId => trackIndex[trackId]);\n\n  const trackInput = {\n    transitType: tracks[0].type as 'train' | 'bus',\n    routes: tracks.map(track => track.route),\n    stopId: tracks[0].stop,\n  }\n  const routeFilter = tracks.map(track => ({ id: track.route, name: track.routeName }));\n\n  return (\n    <Layout>\n      <Arrivals tracks={[trackInput]} title={tracks[0].stopName} routeFilter={routeFilter} />\n    </Layout>\n  );\n};\n\nexport default StationStopTrackPage;\n\nexport const Head = () => <title>El Track</title>\n"],"names":["trackIndex","stationIndex","stationData","_ref","pageContext","stationId","station","stopId","tracks","stops","map","trackId","trackInput","transitType","type","routes","track","route","stop","routeFilter","id","name","routeName","React","Layout","Arrivals","title","stopName","Head"],"sourceRoot":""}