{"version":3,"file":"component---src-pages-[station]-station-[stop]-tsx-6d36da68c6175d78264a.js","mappings":"+tv5BAsBO,MAAMA,E,k6+6EACAC,EAAiDC,E,wBCiB9D,MA7B6BC,IAAwC,IAAvC,OAAEC,GAAgC,EAC9D,MAAMC,EAAYD,EAAOE,QACnBA,EAAUL,EAAaI,GAC7B,IAAKC,EAEH,OADAC,EAAAA,EAAAA,UAAS,QACF,KAET,MAAMC,EAASJ,EAAOK,KAChBC,EAAcJ,EAAQK,MAAMH,GAClC,IAAKE,IAAgBA,EAAYE,OAAMC,GAAWb,EAAWa,KAE3D,OADAN,EAAAA,EAAAA,UAAS,YAAcF,GAChB,KAET,MAAMS,EAASJ,EAAYK,KAAIF,GAAWb,EAAWa,KAE/CG,EAAa,CACjBC,YAAaH,EAAO,GAAGI,KACvBC,OAAQL,EAAOC,KAAIK,GAASA,EAAMC,QAClCb,OAAQM,EAAO,GAAGL,MAEda,EAAcR,EAAOC,KAAIK,IAAS,CAAGG,GAAIH,EAAMC,MAAOG,KAAMJ,EAAMK,cAExE,OACEC,EAAAA,cAACC,EAAAA,EAAM,KACLD,EAAAA,cAACE,EAAAA,EAAQ,CAACd,OAAQ,CAACE,GAAaa,MAAOf,EAAO,GAAGgB,SAAUR,YAAaA,IACjE,EAMN,MAAMS,EAAOA,IAAML,EAAAA,cAAAA,QAAAA,KAAO,W","sources":["webpack://el-track/./src/config/index/index.ts","webpack://el-track/./src/pages/station/[station]/[stop].tsx"],"sourcesContent":["import stationData from \"./stations.json\";\nimport trackData from \"./tracks.json\";\n\ntype Track = {\n  type: string;\n  route: string;\n  routeName: string;\n  stop: string;\n  stopName: string;\n  direction: string;\n  headsign: string[];\n}\n\ntype Station = {\n  name: string;\n  stops: StopTracks;\n}\n\ntype StopTracks = {\n  [stopId: string]: string[];\n}\n\nexport const trackIndex: { [trackId: string]: Track } = trackData;\nexport const stationIndex: { [stationId: string]: Station } = stationData;\n","import { navigate } from \"gatsby\";\nimport * as React from \"react\";\nimport { stationIndex, trackIndex } from \"../../../config/index\";\nimport Layout from \"../../../features/layout/Layout\";\nimport Arrivals from \"../../../features/track/Arrivals\";\n\ntype PathParams = {\n  station: string;\n  stop: string;\n};\n\nconst StationStopTrackPage = ({ params }: { params: PathParams }) => {\n  const stationId = params.station;\n  const station = stationIndex[stationId];\n  if (!station) {\n    navigate(\"/404\");\n    return null;\n  }\n  const stopId = params.stop;\n  const trackIdList = station.stops[stopId];\n  if (!trackIdList || !trackIdList.every(trackId => trackIndex[trackId])) {\n    navigate(\"/station/\" + stationId);\n    return null;\n  }\n  const tracks = trackIdList.map(trackId => trackIndex[trackId]);\n\n  const trackInput = {\n    transitType: tracks[0].type as 'train' | 'bus',\n    routes: tracks.map(track => track.route),\n    stopId: tracks[0].stop,\n  }\n  const routeFilter = tracks.map(track => ({ id: track.route, name: track.routeName }));\n\n  return (\n    <Layout>\n      <Arrivals tracks={[trackInput]} title={tracks[0].stopName} routeFilter={routeFilter} />\n    </Layout>\n  );\n};\n\nexport default StationStopTrackPage;\n\nexport const Head = () => <title>El Track</title>\n"],"names":["trackIndex","stationIndex","stationData","_ref","params","stationId","station","navigate","stopId","stop","trackIdList","stops","every","trackId","tracks","map","trackInput","transitType","type","routes","track","route","routeFilter","id","name","routeName","React","Layout","Arrivals","title","stopName","Head"],"sourceRoot":""}